
服务注册和发现：
    依赖于一个注册中心， 存放服务地址信息
    常见的注册中心有：
    （1）Eureka， Netflix开源， 社区已经不太活跃， 但是比较稳定
    （2）Zookeeper， Google开源， apache支持， 不能与SpringCloud集成，同时ZooKeeper使用的ZAB协议，由于是单点写，在集群扩展性上不具备优势。
    （3）Nacos， Alibaba开源，可以视为注册中心+配置中心
    （4）Consul, HashiCorp开源，go开发，  遵循CAP中的CP原则，

Consul:
    主要功能：
        服务发现、健康检查、KV存储（动态配置）、安全服务通信（为服务生成和分发TLS（ 传输层安全性协议）证书）、多数据中心
    主要架构：
        Agent(代理)是consul的核心程序，以守护进程的方式在各个节点上运行，分成Client和Server两种模式，每个代理都会维护一套服务注册和发现相关信息
        所有Agent都会运行Gossip协议， 加入到一个Gossip集群或池中，实现状态监控和事件通知
        Server又分成Leader 和Follower， leader选主基于Raft算法：



分布式一致算法：
    概念：
        分布式一致性指多个节点对某一变量的取值达成一致，一旦达成一致，则变量的本次取值即被确定。
    主要的分布式一致算法：
        （1）Paxos
        （2）ZAB
        （3）Raft: 共识算法， 强一致性，高可用
            角色： Leader（负责与客户端交互）、Follower（被动）、Candidate（可以被选为新的leader)
            过程:
                (1)Raft使用心跳机制来触发领导者选举
                (2)Leader当选，它就开始为客户请求提供服务, Leader将命令作为新条目附加到其日志中， 先不执行，而是向其他follower发送这个命令让其也复制到日志中
                (3)leader收到半数以上follower反馈后，提交该操作并向客户端返回， 并通知其他节点提交。






